sfTitleMaker plugin
===================

The `sfTitleMakerPlugin` allows you to create modular/hierachical content to be passed to the html `title` tag.

Examples:

 1. My Website » News » Hungry man eats horse
 2. Royal Blue Egg Cup | Ceramics | Products | My Online Store

Usage
-----
Update the execution filter class in `myapp/config/filters.yml`:

    execution:
      class: sfTitleMakerExecutionFilter

Clear your cache:

    ./symfony cc

Add some titles as in the examples

### Example 1

    My Website » News » Hungry man eats horse

In apps/myapp/config/app.yml:

    all:
      sfTitleMaker:
        html_title_stem:       My Website
        # Use default separator and order

In apps/myapp/modules/news/actions/actions.class.php:

    class newsActions extends sfActions
    {
      public function executeShow()
      {
        $newsItem = NewsPeer::retrieveByPk(1);

        sfTitleMaker::getInstance()->add('News');
        sfTitleMaker::getInstance()->add($newsItem->getHeadline());
      }
    }


### Example  2

    Royal Blue Egg Cup | Ceramics | Products | My Online Store

In apps/myapp/config/app.yml:

    all:
      sfTitleMaker:
        html_title_stem:       My Online Store
        html_title_direction:  backward
        html_title_separator:  ' | '

In apps/myapp/modules/products/actions/actions.class.php:

    class newsActions extends sfActions
    {
      public function preExecute()
      {
        sfTitleMaker::getInstance()->add('Products');
      }

      public function executeShow()
      {
        $product = ProductPeer::retrieveByPk(1);

        sfTitleMaker::getInstance()->add($product->getCategory());
        sfTitleMaker::getInstance()->add($product->getTitle());
      }
    }
